{"version":3,"file":"browser.js","sources":["../../source/test/load-script.ts","../../source/types.ts","../../source/css/document-index.ts","../../source/html/index.ts","../../source/css/index.ts","../../source/get-template.ts","../../source/config.ts","../../source/delete-user.ts","../../source/handle-user.ts","../../source/element.ts","../../source/test/dispatch-event.ts","../../source/test/slots.ts","../../source/test/fake-data.ts","../../source/test/browser.ts"],"sourcesContent":["import * as VBM from 'vamtiger-browser-method/build/types';\nimport { expect } from 'chai';\n\nconst { VamtigerBrowserMethod } = window;\nconst { loadScript } = VamtigerBrowserMethod;\n\nexport default () => describe('vamtiger-user-registry', function () {\n    before(async function () {\n        await loadScript({\n            src: 'vamtiger-user-registry.js'\n        });\n    });\n\n    it('load script', async function() {\n        const script = document.head.querySelector('[src=\"vamtiger-user-registry.js\"]');\n\n        expect(script instanceof HTMLScriptElement).to.be.true;\n    });\n});","import * as VBM from 'vamtiger-browser-method/build/types';\nimport VamtigerUserRegistry from './element';\n\nexport enum StringConstant {\n    nothing = ''\n}\n\nexport enum Selector {\n    shadowUi = '[data-vamtiger-user-listing]',\n    style = 'style',\n    user = '[data-user]',\n    footer = '[data-footer]',\n    overlay = '[data-overlay]',\n    confirmDialog = '[data-confirm-dialog]',\n    confirmDeleteDialog = '[data-confirm-delete-user]',\n    confirmAddNewUserDialog = '[data-confirm-add-new-user]',\n    cancelDialog = '[data-confirm-button-cancel]',\n    confirmButtonOkay = '[data-confirm-button-ok]',\n    addNewUserButton = '[data-action-add-user]',\n    addNewUserForm = '[data-add-new-user-form]',\n    addNewUserFormError = '[data-error]',\n    addNewUserFormInputError = 'input[data-error]',\n    layoutMarkersToggle = '[data-layout-markers-toggle]'\n}\n\nexport enum EventName {\n    connected = 'vamtiger-user-registry-connected',\n    addUser = 'vamtiger-user-registry-add-user',\n    userAdded = 'vamtiger-user-registry-user-added'\n}\n\nexport enum RequestMethod {\n    DELETE = 'DELETE',\n    GET = 'GET',\n    POST = 'POST',\n    PUT = 'PUT'\n}\n\nexport enum ObservedAttributes {\n}\n\nexport enum SlotName {\n    headerImage = 'header-image',\n    headerCapation = 'header-caption',\n    action = 'action',\n    user = 'user',\n    overlay = 'overlay',\n    footer = 'footer'\n}\n\nexport interface IGetTemplate {\n    selector: Selector;\n    attributes?: IAttributes;\n    properties?: IProperties;\n}\n\nexport interface IAttributes {\n    id?: string;\n    for?: string;\n    name?: string;\n    slot?: string;\n}\n\nexport interface IProperties {\n    innerHTML?: string;\n}\n\nexport interface IDeleteUser {\n    element: VamtigerUserRegistry;\n    userElement?: HTMLElement;\n}\n\nexport interface ICloseConfirmation {\n    element: VamtigerUserRegistry;\n}\n\nexport interface IUserRegistryElementDataset extends DOMStringMap{\n    connected?: string;\n    getUsersUrl?: string;\n    getUserUrl?: string;\n    getUsersError?: string;\n    getAllUsers?: string;\n    deleteUserUrl?: string;\n    addNewUserUrl?: string;\n    handleUserTimeot?: string;\n    hover?: string;\n    confirm?: 'Delete user' | 'Add new user';\n    layoutMarkers?: string;\n    testMode?: string;\n    error?: string;\n    defaultErrorMessage?: string;\n}\n\nexport interface IHandleFooter {\n    element: VamtigerUserRegistry;\n    mutationLisit: MutationRecord[];\n    observer: MutationObserver;\n}\n\nexport interface IParams {\n    getUsersUrl: string;\n    getUserUrl: string;\n    getUsersNextPageUrl?: string;\n    getAllUsers?: boolean;\n\n    deleteUserUrl: string;\n\n    addNewUserUrl: string;\n\n    handleUserTimeout: number;\n\n    layoutMarkers: boolean;\n    testMode: boolean;\n}\n\nexport interface IUserRegistryElement extends HTMLElement {\n    dataset: UserRegistryElementDataset;\n}\n\nexport interface IGetUsers {\n    element: VamtigerUserRegistry;\n}\n\nexport interface IGetUser {\n    element: VamtigerUserRegistry;\n    userId: number;\n}\n\nexport interface IUser {\n    id: number;\n    name: string;\n    surname: string;\n    email: string;\n    position: string;\n}\n\nexport interface IGetUserSuccessResponse {\n    result: 'successful',\n    message: 'retrieved user(s)',\n    data: {\n        user: IUser\n    }\n}\n\nexport interface IGetUserFailedResponse {\n    \"result\": \"failed\",\n    \"message\": \"retrieved user(s) failed\",\n    \"data\": {\n        \"user\": 102\n    }\n}\n\nexport interface IResponseBase {\n    result: 'successful' | 'failed' | 'error';\n    message: string;\n}\n\nexport interface IUsersResponse extends IResponseBase {\n    data: {\n        users: {\n            current_page: number;\n            from: number;\n            last_page: number;\n            per_page: number;\n            to: number;\n            total: number;\n\n            first_page_url: string;\n            last_page_url: string;\n            next_page_url: string;\n            path: string;\n            prev_page_url: string | null;\n\n            data: IUser[]\n        }\n    }\n}\n\nexport interface IDeleteUserResponse extends IResponseBase {\n    data: {\n        user: number;\n        delete: number;\n    }\n}\n\nexport interface IAddNewUserSuccessResponse {\n    result: 'successful';\n    message: 'added new user',\n    data: {\n        user: number\n    }\n}\n\nexport interface IAddNewUserFailedResponse {\n    result: 'failed';\n    message: 'failed to add new user',\n    data: {\n        [key: string]: {\n            error: string;\n            errorDescription?: string;\n        }[]\n    }\n}\n\nexport interface IHandleUser {\n    element: VamtigerUserRegistry;\n    user: IUser;\n}\n\nexport interface IAddNewUser {\n    element: VamtigerUserRegistry;\n}\n\nexport interface IAddUserEventMessage extends CustomEventInit {\n    user?: IUser;\n}\n\nexport interface IHandleEvent {\n    element: VamtigerUserRegistry;\n    event: CustomEventInit<IAddUserEventMessage>\n}\n\ntype UserRegistryElementDataset = {[K in keyof IUserRegistryElementDataset]: IUserRegistryElementDataset[K]};\n\nexport type AttributesKey = keyof IAttributes;\n\nexport type ObservedAttribute = keyof typeof ObservedAttributes;\n\nexport type AddNewUserResponse = IResponseBase\n    & (IAddNewUserSuccessResponse | IAddNewUserFailedResponse);\n\nexport type GetNewUserResponse = IResponseBase\n    & (IGetUserSuccessResponse | IGetUserFailedResponse)\n\nexport type GetTemplate<P extends IGetTemplate> =\n    P['selector'] extends Selector.style ? HTMLStyleElement :\n    P['selector'] extends Selector.addNewUserButton ? HTMLButtonElement :\n    P['selector'] extends Selector.confirmDialog\n        | Selector.shadowUi\n        | Selector.user\n        | Selector.confirmDeleteDialog\n        | Selector.confirmAddNewUserDialog\n        ? HTMLDivElement :\n    null;","export default `vamtiger-user-registry button,vamtiger-user-registry fieldset,vamtiger-user-registry form,vamtiger-user-registry input,vamtiger-user-registry label{margin:nonne;padding:none;border:none;outline:none;-webkit-appearance:none}vamtiger-user-registry button{cursor:pointer}@-webkit-keyframes a{0%{opacity:0;visibility:hidden}to{opacity:1;visibility:visible}}@keyframes a{0%{opacity:0;visibility:hidden}to{opacity:1;visibility:visible}}@-webkit-keyframes b{0%{top:2em;opacity:0}to{top:0;opacity:1}}@keyframes b{0%{top:2em;opacity:0}to{top:0;opacity:1}}vamtiger-user-registry [data-button],vamtiger-user-registry form input,vamtiger-user-registry form label{cursor:pointer}vamtiger-user-registry [data-display-grid]{display:grid}vamtiger-user-registry [data-position-relative]{position:relative}vamtiger-user-registry [slot=user]{position:relative;overflow:hidden}vamtiger-user-registry [slot=user] *{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}vamtiger-user-registry [slot=user]:nth-child(odd){background-color:#d3d3d3}vamtiger-user-registry [slot=user]:nth-child(2n),vamtiger-user-registry [slot=user] [data-delete]{background-color:#fff}vamtiger-user-registry [slot=user] [data-delete]{display:grid;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:absolute;height:100%;width:2em;top:0;right:-2em;-webkit-transition:right 235ms;transition:right 235ms;color:red;font-size:1.5em;pointer-events:none}vamtiger-user-registry [slot=user][data-hover] [data-delete]{right:0}vamtiger-user-registry [slot=overlay]{visibility:hidden;position:relative;grid-row:1;grid-column:1}vamtiger-user-registry [slot=overlay] [data-confirm-header]{font-size:1.5em}vamtiger-user-registry [slot=overlay] [data-confirm-body]{font-size:1.1em;margin-bottom:1em}vamtiger-user-registry [slot=overlay] [data-header-underline]{height:1px;background-color:#d3d3d3}vamtiger-user-registry [slot=overlay] [data-confirm-footer]{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:reverse;-ms-flex-direction:row-reverse;flex-direction:row-reverse}vamtiger-user-registry [slot=overlay] [data-confirm-footer] [data-confirm-button]{display:grid;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:8em;height:3.4em}vamtiger-user-registry [slot=overlay] [data-confirm-footer] [data-confirm-button][data-confirm-button-ok]{color:#fff;background-color:#000}vamtiger-user-registry [slot=overlay] [data-confirm-footer] [data-confirm-button][data-confirm-button-cancel]{color:gray;background-color:#fff}vamtiger-user-registry [slot=overlay] [data-confirm-footer] [data-confirm-button]:hover{-webkit-filter:inver(1);filter:inver(1)}vamtiger-user-registry [slot=overlay] [data-confirm-footer] [data-confirm-button]:nth-child(n+2){margin-right:1em}vamtiger-user-registry input{border:1px solid #000}vamtiger-user-registry [data-confirm-body] [data-confirm-input-form]{grid-row-gap:1em}vamtiger-user-registry [data-confirm-body] [data-confirm-input-form] [form-group]{display:grid;grid-row-gap:.5em;position:relative;grid-auto-rows:minmax(1.2em,auto)}vamtiger-user-registry [data-confirm-body] [data-confirm-input-form] [form-group] input{padding:.4em;font-size:1em}vamtiger-user-registry [data-confirm-body] [data-confirm-input-form] [form-group] input[data-error]~[data-error]:after{display:inline-block;content:attr(data-error);font-size:.8em;color:red}vamtiger-user-registry[data-connected]{-webkit-animation:a 387ms linear forwards;animation:a 387ms linear forwards}vamtiger-user-registry[data-confirm] [slot=overlay]{-webkit-animation:b 135ms;animation:b 135ms}vamtiger-user-registry[data-confirm=\"Add new user\"] [data-confirm-add-new-user],vamtiger-user-registry[data-confirm=\"Delete user\"] [data-confirm-delete-user]{visibility:visible}vamtiger-user-registry[data-test-mode] [data-confirm-button-ok]{visibility:none;cursor:not-allowed}\n/* layout markers*/vamtiger-user-registry[data-layout-markers] [slot=overlay]>:nth-child(odd){background-color:#b0c4de}vamtiger-user-registry[data-layout-markers] [slot=overlay]>:nth-child(2n){background-color:#d3d3d3}vamtiger-user-registry[data-layout-markers] [slot=overlay] [data-add-new-user-form]>:nth-of-type(odd){background-color:#ffb6c1}vamtiger-user-registry[data-layout-markers] [slot=overlay] [data-add-new-user-form]>:nth-of-type(odd)>:nth-of-type(odd){background-color:#90ee90}vamtiger-user-registry[data-layout-markers] [slot=overlay] [data-add-new-user-form]>:nth-of-type(2n){background-color:#008b8b}vamtiger-user-registry[data-layout-markers] [slot=overlay] [data-add-new-user-form]>:nth-of-type(2n)>:nth-of-type(odd){background-color:#d3d3d3}\n/*# sourceMappingURL=document-index.ts.map */`;","export default `<div slot=\"overlay\" data-confirm-dialog data-confirm-add-new-user> <div data-confirm-header> Add new user </div> <div data-header-underline></div> <div data-confirm-body data-display-grid> <form data-add-new-user-form data-confirm-input-form data-display-grid> <div form-group> <label for=\"addNewUserNameInput\"> Name </label> <input id=\"addNewUserNameInput\" name=\"name\"> <span data-error></span> </div> <div form-group> <label for=\"addNewUserSurnameInput\"> Surname </label> <input id=\"addNewUserSurnameInput\" name=\"surname\"> <span data-error></span> </div> <div form-group> <label for=\"addNewUserEmailInput\"> Email </label> <input type=\"email\" id=\"addNewUserEmailInput\" name=\"email\"> <span data-error></span> </div> <div form-group> <label for=\"addNewUserPositionInput\"> Position </label> <input id=\"addNewUserPositionInput\" name=\"position\"> <span data-error data-default-error-message=\"Please enter your current position\"></span> </div> </form> </div> <div data-confirm-footer> <button data-confirm-button data-confirm-button-ok> <span>Confirm</span> </button> <button data-confirm-button data-confirm-button-cancel> <span>Cancel</span> </button> </div> </div> <div slot=\"overlay\" data-confirm-dialog data-confirm-delete-user> <div data-confirm-header> Confirm delete </div> <div data-header-underline></div> <div data-confirm-body> <span> Please confirm that you would like to delete this user. </span> </div> <div data-confirm-footer> <button data-confirm-button data-confirm-button-ok> <span>Confirm</span> </button> <button data-confirm-button data-confirm-button-cancel> <span>Cancel</span> </button> </div> </div> <button slot=\"action\" data-action-add-user>Add new user</button> <div data-user data-button></div> <div data-vamtiger-user-listing> <div data-test-mode> <span data-title> test mode </span> <div data-separator></div> <div data-layout-markers-controls> <span data-label> layout markers </span> <div data-layout-markers-toggle></div> </div> </div> <div data-header> <div data-header-overlay></div> <figure data-header-image> <slot name=\"header-image\"></slot> </figure> <div data-header-caption> <slot name=\"header-caption\"></slot> </div> </div> <div data-body> <div data-left-side-bar></div> <div data-user-listing> <div data-action> <slot name=\"action\"></slot> </div> <div data-users> <slot name=\"user\"></slot> </div> </div> <div data-right-side-bar></div> </div> <div data-footer> <a data-backend>Laravel</a> <span data-separator></span> <a data-frontend>Web Components</a> </div> <div data-overlay> <slot name=\"overlay\"></slot> </div> </div>`;","export default `@-webkit-keyframes a{0%{opacity:0;visibility:hidden}to{opacity:1;visibility:visible}}@keyframes a{0%{opacity:0;visibility:hidden}to{opacity:1;visibility:visible}}:host{display:inline-block;position:relative;-ms-touch-action:manipulation;touch-action:manipulation;opacity:0}:host a,:host button,:host figure,:host h1,:host h2,:host h3,:host h4,:host h5,:host h6{margin:0;padding:0;border:none;outline:none;-webkit-appearance:none;text-decoration:none}:host [data-vamtiger-user-listing]{height:100%;position:relative;display:grid;grid-template-rows:300px 3fr 50px}:host [data-vamtiger-user-listing] [data-test-mode]{position:fixed;top:0;left:0;z-index:4;display:grid;grid-gap:.5em;padding:1em;font-size:1em;text-transform:uppercase;background-color:#fff;visibility:hidden}:host [data-vamtiger-user-listing] [data-test-mode] [data-separator]{height:1px;background-color:#d3d3d3}:host [data-vamtiger-user-listing] [data-test-mode] [data-layout-markers-controls]{display:grid;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;grid-gap:1em}:host [data-vamtiger-user-listing] [data-test-mode] [data-layout-markers-controls] [data-layout-markers-toggle]{height:1em;display:grid;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;position:relative}:host [data-vamtiger-user-listing] [data-test-mode] [data-layout-markers-controls] [data-layout-markers-toggle]:after,:host [data-vamtiger-user-listing] [data-test-mode] [data-layout-markers-controls] [data-layout-markers-toggle]:before{display:inline-block;content:\"\";height:100%;grid-column:1;grid-row:1}:host [data-vamtiger-user-listing] [data-test-mode] [data-layout-markers-controls] [data-layout-markers-toggle]:before{background-color:#ffa07a;-webkit-transition:background-color 75ms;transition:background-color 75ms;width:2.5em;border-radius:1em}:host [data-vamtiger-user-listing] [data-test-mode] [data-layout-markers-controls] [data-layout-markers-toggle]:after{background-color:#d3d3d3;width:1em;border-radius:100%;border:1px solid #a9a9a9;-webkit-transform:scale(1.4);transform:scale(1.4);-webkit-box-sizing:border-box;box-sizing:border-box;position:absolute;left:0;-webkit-transition:left 75ms;transition:left 75ms}:host [data-vamtiger-user-listing] [data-test-mode] [data-layout-markers-controls] [data-layout-markers-toggle][data-active]:before{background-color:#87cefa}:host [data-vamtiger-user-listing] [data-test-mode] [data-layout-markers-controls] [data-layout-markers-toggle][data-active]:after{left:25px}:host [data-vamtiger-user-listing] [data-header]{display:grid;grid-template-rows:1fr;position:relative}:host [data-vamtiger-user-listing] [data-header]>*{grid-column:1;grid-row:1;width:100%;max-height:100%}:host [data-vamtiger-user-listing] [data-header] [data-header-overlay]{background-color:rgba(0,0,0,.3);z-index:2}:host [data-vamtiger-user-listing] [data-header] [data-header-image]{z-index:1;-o-object-fit:cover;object-fit:cover;position:relative}:host [data-vamtiger-user-listing] [data-header] [data-header-caption]{display:grid;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;z-index:3;color:#fff;font-size:2em}:host [data-vamtiger-user-listing] [data-body]{display:grid;grid-template-columns:1fr 3fr 1fr}:host [data-vamtiger-user-listing] [data-body] [data-user-listing]{display:grid;grid-template-rows:50px auto;grid-gap:1em;position:relative}:host [data-vamtiger-user-listing] [data-body] [data-user-listing] [data-action]{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:reverse;-ms-flex-direction:row-reverse;flex-direction:row-reverse;position:-webkit-sticky;position:sticky;top:0;z-index:2;background-color:#fff}:host [data-vamtiger-user-listing] [data-body] [data-user-listing] [data-users]{display:grid;grid-auto-rows:3em;z-index:1}:host [data-vamtiger-user-listing] [data-overlay]{overflow:auto;position:fixed;height:100vh;width:100vw;display:grid;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;z-index:3;background:radial-gradient(rgba(0,0,0,.6),#000)}:host [data-vamtiger-user-listing] [data-overlay],:host [data-vamtiger-user-listing] [data-overlay] [data-confirm-delete-user]{visibility:hidden}:host [data-vamtiger-user-listing] [data-overlay][data-confirm]{-webkit-animation:a 135ms linear forwards;animation:a 135ms linear forwards}:host [data-vamtiger-user-listing] [data-footer]{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:#000;color:#fff;font-weight:1em}:host [data-vamtiger-user-listing] [data-footer] a{color:#fff;cursor:pointer}:host [data-vamtiger-user-listing] [data-footer] [data-separator]{margin:0 .5em;height:50%;width:1px;background-color:#fff}::slotted([slot=action]),[data-action] button{width:8em;display:grid;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;color:#fff;background-color:#000}::slotted([slot=footer]),::slotted([slot=header-image]){width:100%;max-height:100%;position:relative}::slotted([slot=user]){display:grid;grid-template-columns:repeat(2,1fr) minmax(auto,4fr);-webkit-box-align:center;-ms-flex-align:center;align-items:center;grid-gap:1em;padding-left:1em}::slotted([slot=overlay]){display:grid;grid-row-gap:1em;padding:2em;background-color:#fff}\n\n/* Layout markers */:host [data-vamtiger-user-listing][data-test-mode] [data-test-mode]{visibility:visible}:host [data-vamtiger-user-listing][data-layout-markers]{background-color:#a9a9a9}:host [data-vamtiger-user-listing][data-layout-markers] [data-test-mode]~:nth-child(odd){background-color:#add8e6}:host [data-vamtiger-user-listing][data-layout-markers] [data-body]>:nth-child(odd){background-color:#ffb6c1}:host [data-vamtiger-user-listing][data-layout-markers] [data-user-listing]>:nth-child(odd){background-color:#90ee90}:host [data-vamtiger-user-listing][data-layout-markers] [data-user-listing]>:nth-child(2n){background-color:#fafad2}:host [data-vamtiger-user-listing][data-layout-markers] [data-action]{background-color:#add8e6}\n/*# sourceMappingURL=index.ts.map */`;","import {\n    IGetTemplate,\n    GetTemplate,\n    StringConstant,\n    AttributesKey\n} from './types';\nimport html from './html';\nimport css from './css';\n\nconst { nothing } = StringConstant;\nconst template = document.createElement('template');\nconst stylesheet = `<style>${css}</style>`\nconst templateHtml = [\n    stylesheet,\n    html\n].join(nothing);\n\ntemplate.innerHTML = templateHtml;\n\nexport default <P extends IGetTemplate>(params: P) => {\n    const {\n        selector,\n        attributes = {},\n        properties = {}\n    } = params;\n    const attributesKeys = Object.keys(attributes) as AttributesKey[]\n    const templateElement = template.content.querySelector(selector);\n    const currentTemplate = templateElement && templateElement.cloneNode(true) as GetTemplate<P>;\n\n    if (currentTemplate) {\n        Object.assign(currentTemplate, properties);\n\n        attributesKeys.forEach(key => attributes[key] && currentTemplate.setAttribute(key, attributes[key] || ''));\n    }\n\n    return currentTemplate;\n};","import {\n    ObservedAttributes,\n    ObservedAttribute,\n    EventName\n} from './types'\n\nexport const shadowRoot = {\n    mode: 'open'\n} as ShadowRootInit;\n\nexport const observedAttributes = Object.keys(ObservedAttributes) as ObservedAttribute[];\n\nexport const eventParams = {\n    bubbles: true\n};\n\nexport const customEvent = {\n    [EventName.connected]: new CustomEvent(EventName.connected, {\n        ...eventParams\n    })\n}\n\nexport const idleTimeout = 1;\n\nexport const footerObserver = {\n    attributes: true\n};\n\nexport const clickEventName = document.ontouchstart ? 'touchstart' : 'click';\n\nexport const dependencies = [\n    {\n        name: 'font-awesome',\n        href: 'https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css'\n    }\n]","import {\n    IUserRegistryElement,\n    IDeleteUser,\n    IDeleteUserResponse,\n    Selector,\n    RequestMethod\n} from './types';\nimport closeConfirmation from './close-confirmation';\n\nexport default async function ({element}: IDeleteUser) {\n    const { params, deleteUserElement: userElement } = element;\n    const { deleteUserUrl } = params;\n    const user = userElement && element.user.get(userElement);\n    const url = user?.id && `${deleteUserUrl}/${user.id}`;\n    const requestParams = {\n        method: RequestMethod.DELETE\n    }\n\n    let response: IDeleteUserResponse;\n\n    if (url) {\n        try {\n            response = await fetch(url, requestParams)\n                .then(response => response.json());\n\n            if (response.result === 'successful' && userElement) {\n                element.deleteUserElement = undefined;\n\n                element.user.delete(userElement);\n\n                userElement.parentElement?.removeChild(userElement);\n\n                closeConfirmation({element});\n            }\n        } catch(error) {\n            console.error('Delete Usesr error');\n            console.error(error);\n        }\n    }\n}\n\nexport function confirm({element, userElement}: IDeleteUser) {\n    const { shadowRoot } = element;\n    const dataset: IUserRegistryElement['dataset'] = element.dataset;\n    const overlay = shadowRoot?.querySelector<HTMLElement>(Selector.overlay);\n    const overlayDataset: IUserRegistryElement['dataset'] | undefined = overlay?.dataset;\n\n    if (overlayDataset) {\n        dataset.confirm = 'Delete user';\n        overlayDataset.confirm = dataset.confirm;\n        element.deleteUserElement = userElement;\n    }\n}","import {\n    IHandleUser,\n    Selector,\n    SlotName,\n    EventName\n} from './types';\nimport {\n    eventParams\n} from './config';\nimport { idleTimeout, clickEventName } from './config';\nimport getTemplate from './get-template';\nimport { confirm as confirmDelete } from './delete-user';\n\nconst { requestIdleCallback } = self;\n\nexport default function (params: IHandleUser) {\n    if (requestIdleCallback) {\n        handleUser(params);\n    } else {\n        setTimeout(() => handleUser(params), idleTimeout);\n    }\n}\n\nfunction handleUser({element, user}: IHandleUser) {\n    const { name, surname, email } = user;\n    const ignore = Array\n        .from(element.user.values())\n        .some(({id}) => id === user.id);\n    const userTemplate = !ignore && [\n        `<span data-name>${name}</span>`,\n        `<span data-surname>${surname}</span>`,\n        `<span data-email>${email}</span>`,\n        '<span data-delete class=\"fa fa-trash\" aria-hidden=\"true\"></delete>'\n    ].join('');\n    const userElement = userTemplate  && getTemplate({\n        selector: Selector.user,\n        properties: {\n            innerHTML: userTemplate\n        },\n        attributes: {\n            slot: SlotName.user\n        }\n    });\n\n    if (userElement) {\n        element.user.set(userElement, user);\n\n        element.appendChild(userElement);\n\n        element.dispatchEvent(new CustomEvent(\n            EventName.userAdded,\n            {\n                ...eventParams,\n                detail: {user}\n            }\n        ));\n\n        userElement.addEventListener('mouseenter', () => userElement.dataset.hover = '');\n        userElement.addEventListener('mouseleave', () => delete userElement.dataset.hover);\n        userElement.addEventListener(clickEventName, () => confirmDelete({element, userElement}));\n    }\n}","import {\n    IUserRegistryElement,\n    IParams,\n    IUser,\n    Selector,\n    ObservedAttribute,\n    EventName,\n    IAddUserEventMessage\n} from './types';\nimport css from './css/document-index';\nimport getTemplate from './get-template';\nimport {\n    shadowRoot as shadowRootConfig,\n    observedAttributes,\n    footerObserver as footerObserverConfig,\n    clickEventName,\n    dependencies,\n    customEvent\n} from './config';\nimport getUsers from './get-users';\nimport handleFooter from './handle-footer';\nimport closeConfirmation from './close-confirmation';\nimport deleteUser from './delete-user';\nimport addNewUser, { confirm as addNewUserConfirm } from './add-new-user';\nimport handleEvent from './handle-event';\n\nconst { VamtigerBrowserMethod } = self;\nconst { loadScript, intersectionObserver } = VamtigerBrowserMethod;\n\nexport const name = 'vamtiger-user-registry';\n\ncss && Promise\n    .all([...dependencies, { name, css }].map(loadScript))\n    .catch(console.error);\n\nexport default class VamtigerUserRegistry extends HTMLElement implements IUserRegistryElement {\n    readonly params: IParams;\n    user = new Map<HTMLElement, IUser>();\n    deleteUserElement?: HTMLElement;\n    requestUrls = new Set<string>();\n    footerObserver?: MutationObserver;\n\n    constructor() {\n        super();\n\n        const shadowRoot = this.attachShadow(shadowRootConfig);\n        const stylesheet = getTemplate({\n            selector: Selector.style\n        });\n        const ui = getTemplate({\n            selector: Selector.shadowUi\n        });\n        const elements = [\n            stylesheet,\n            ui\n        ];\n        const dataset: IUserRegistryElement['dataset'] = this.dataset;\n        const uiDatatset: IUserRegistryElement['dataset'] | undefined = ui?.dataset;\n        const {\n            getUsersUrl = '',\n            getUserUrl = '',\n            deleteUserUrl = '',\n            handleUserTimeout = 0,\n            addNewUserUrl = ''\n        } = dataset;\n\n        this.params = {\n            layoutMarkers: dataset.hasOwnProperty('layoutMarkers'),\n            testMode: dataset.hasOwnProperty('testMode'),\n            addNewUserUrl,\n            getUsersUrl,\n            getUserUrl,\n            deleteUserUrl,\n            handleUserTimeout: Number(handleUserTimeout),\n            getAllUsers: dataset.hasOwnProperty('getAllUsers') || !intersectionObserver\n        };\n\n        if (this.params.layoutMarkers && uiDatatset) {\n            uiDatatset.layoutMarkers = '';\n        }\n\n        if (this.params.testMode && uiDatatset) {\n            uiDatatset.testMode = '';\n        }\n\n        elements.forEach(element => element && shadowRoot.appendChild(element));\n    }\n\n    static get observedAttributes() {\n        return observedAttributes;\n    }\n\n    async connectedCallback() {\n        const element = this;\n        const { shadowRoot, params } = element;\n        const { testMode, layoutMarkers } = params;\n        const shadowUi = shadowRoot?.querySelector<HTMLElement>(Selector.shadowUi);\n        const layoutMarkersToggle = shadowRoot?.querySelector<HTMLElement>(Selector.layoutMarkersToggle);\n        const addNewUserButton = !element.querySelector<HTMLButtonElement>(Selector.addNewUserButton) && getTemplate({\n            selector: Selector.addNewUserButton\n        });\n        const confirmDeleteDialog = getTemplate({\n            selector: Selector.confirmDeleteDialog\n        });\n        const confirmAddNewUserDialog = getTemplate({\n            selector: Selector.confirmAddNewUserDialog\n        });\n        const confirmDeleteButton = confirmDeleteDialog\n            ?.querySelector<HTMLElement>(Selector.confirmButtonOkay)\n        const confirmAddNewUserButton = confirmAddNewUserDialog\n            ?.querySelector<HTMLElement>(Selector.confirmButtonOkay)\n        const elements = [\n            addNewUserButton,\n            confirmDeleteDialog,\n            confirmAddNewUserDialog\n        ];\n        const closeConfirmationElements = [\n            confirmDeleteDialog?.querySelector<HTMLElement>(Selector.cancelDialog),\n            confirmAddNewUserDialog?.querySelector<HTMLElement>(Selector.cancelDialog)\n        ];\n        const footer = shadowRoot?.querySelector<HTMLElement>(Selector.footer);\n        const dataset: IUserRegistryElement['dataset'] = this.dataset;\n\n        elements.forEach(currentElement => currentElement && element.appendChild(currentElement));\n\n        closeConfirmationElements.forEach(currentElement => currentElement && currentElement\n            .addEventListener(clickEventName, () => closeConfirmation({element})));\n\n        if (addNewUserButton) {\n            addNewUserButton.addEventListener(clickEventName, () => addNewUserConfirm({element}));\n        }\n\n        if (confirmDeleteButton) {\n            confirmDeleteButton.addEventListener(clickEventName, () => deleteUser({element}));\n        }\n\n        if (confirmAddNewUserButton) {\n            confirmAddNewUserButton.addEventListener(clickEventName, () => addNewUser({element}));\n        }\n\n        if (footer && intersectionObserver) {\n            this.footerObserver = new MutationObserver((mutationLisit, observer) => handleFooter({\n                element,\n                mutationLisit,\n                observer\n            }));\n\n            this.footerObserver.observe(footer, footerObserverConfig);\n            intersectionObserver.observe(footer);\n        } else {\n            dataset.getAllUsers = '';\n        }\n\n        if (testMode || layoutMarkers) {\n            layoutMarkersToggle?.addEventListener(clickEventName, () => {\n                if (shadowUi) {\n                    shadowUi.dataset.layoutMarkers = '';\n\n                    if (layoutMarkersToggle.dataset.hasOwnProperty('active')) {\n                        delete layoutMarkersToggle.dataset.active;\n                        delete element.dataset.layoutMarkers;\n                        delete shadowUi?.dataset.layoutMarkers;\n                    } else {\n                        layoutMarkersToggle.dataset.active = '';\n                        element.dataset.layoutMarkers = '';\n                    }\n                }\n            })\n        }\n\n        await getUsers({ element });\n\n        dataset.connected = '';\n\n        element.addEventListener(\n            EventName.addUser,\n            (event: CustomEventInit<IAddUserEventMessage>) => handleEvent({element, event}));\n\n        element.dispatchEvent(customEvent[\"vamtiger-user-registry-connected\"]);\n    }\n\n    attributeChangedCallback(name: ObservedAttribute, oldValue: string, newValue: string) {\n\n    }\n}","import { expect } from 'chai';\nimport * as faker from 'faker';\nimport { EventName, IUser, IAddUserEventMessage, Selector } from '../types';\nimport VamtigerUserRegistry, { name } from '../element';\nimport {removeUsers} from './browser';\n\nconst { VamtigerBrowserMethod } = window;\nconst { loadScript } = VamtigerBrowserMethod;\n\nexport default () => describe('dispatch custom events', function () {\n    const element = document.body.querySelector<VamtigerUserRegistry>(name);\n    const user: IUser = {\n        id: 0,\n        name: faker.name.firstName(),\n        surname: faker.name.lastName(),\n        email: faker.internet.email(),\n        position: faker.name.jobTitle()\n    }\n\n    after(removeUsers);\n\n    describe(`${EventName.connected}`, function () {\n        it('element added to DOM ', async function() {return new Promise((resolve, reject) => {\n            const element = document.createElement(name);\n\n            element.addEventListener(EventName.connected, () => {\n                expect(element.parentElement).to.equal(document.body);\n\n                element.parentElement?.removeChild(element);\n\n                resolve();\n            });\n\n            document.body.appendChild(element);\n        })});\n    });\n\n    describe(`${EventName.userAdded}`, function () {\n        it.skip('user element added to DOM ', function() {return new Promise(resolve => {\n            element?.addEventListener(EventName.userAdded, ({detail}: CustomEventInit<IAddUserEventMessage>) => {\n                expect(detail?.user).to.eq(user);\n\n                resolve();\n            });\n\n            element?.dispatchEvent(new CustomEvent(EventName.addUser, {\n                detail: {user}\n            }));\n        })});\n    });\n});","import * as VBM from 'vamtiger-browser-method/build/types';\nimport { expect } from 'chai';\nimport { EventName, SlotName } from '../types';\nimport VamtigerUserRegistry, { name } from '../element';\n\nexport default () => describe('named slots', function () {\n    let element: VamtigerUserRegistry | undefined;\n\n    before(function () {return new Promise(resolve => {\n        element = document.createElement(name) as VamtigerUserRegistry;\n\n        element.addEventListener(EventName.connected, resolve);\n\n        document.body.appendChild(element);\n    })});\n\n    after(function () {\n        element?.parentElement?.removeChild(element);\n    })\n\n    it(SlotName.headerImage, async function() {\n        const selector = `slot[name=\"${SlotName.headerImage}\"]`;\n\n        expect(element?.shadowRoot?.querySelector(selector))\n            .to.be.ok;\n    });\n\n    it(SlotName.headerCapation, async function() {\n        const selector = `slot[name=\"${SlotName.headerCapation}\"]`;\n\n        expect(element?.shadowRoot?.querySelector(selector))\n            .to.be.ok;\n    });\n\n    it(SlotName.action, async function() {\n        const selector = `slot[name=\"${SlotName.action}\"]`;\n\n        expect(element?.shadowRoot?.querySelector(selector))\n            .to.be.ok;\n    });\n\n    it(SlotName.user, async function() {\n        const selector = `slot[name=\"${SlotName.user}\"]`;\n\n        expect(element?.shadowRoot?.querySelector(selector))\n            .to.be.ok;\n    });\n});","import { expect } from 'chai';\nimport * as faker from 'faker';\nimport {getElement} from './browser';\nimport handleUser from '../handle-user';\nimport { IUser } from '../types';\n\nexport default () => describe('Test Mode', function () {\n    const element = getElement();\n    const numberOfRecords = 100;\n\n    it(`Fake Data: ${numberOfRecords} records`, async function () {\n        const users: IUser[] = new Array(numberOfRecords)\n            .fill(undefined)\n            .map((entry, index) => ({\n                id: index,\n                name: faker.name.firstName(),\n                surname: faker.name.lastName(),\n                email: faker.internet.email(),\n                position: faker.name.jobTitle()\n            }));\n\n        element && users.map(user => handleUser({element, user}));\n    });\n});","import { setup, run } from 'mocha';\nimport loadScript from './load-script';\nimport dispatchEvent from './dispatch-event';\nimport slots from './slots';\nimport fakeData from './fake-data';\nimport VamtigerUserRegistry, { name } from '../element';\nimport { Selector } from '../types';\n\nsetup('bdd');\n\nloadScript();\nslots();\ndispatchEvent();\nfakeData();\n\nrun();\n\nexport function getElement() {\n    const element = document.body.querySelector<VamtigerUserRegistry>(name);\n\n    return element;\n}\n\nexport function removeUsers() {\n    const element = getElement();\n\n    element && Array.from(element.querySelectorAll<HTMLElement>(Selector.user))\n        .forEach(userElement => {\n            element.removeChild(userElement);\n\n            element.user.delete(userElement);\n        });\n}"],"names":["expect","css","handleUser","confirmDelete","VamtigerBrowserMethod","loadScript","intersectionObserver","faker.name","faker.internet","setup","run"],"mappings":"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"}