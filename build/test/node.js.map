{"version":3,"file":"node.js","sources":["../../source/test/generate.ts"],"sourcesContent":["import { resolve as resolvePath, basename } from 'path';\nimport { expect } from 'chai';\nimport copyFile from 'vamtiger-copy-file';\nimport getFolderContent from 'vamtiger-get-directory-content';\n\nconst buildFolder = resolvePath(\n    __dirname,\n    '..'\n);\nconst testHtmlSource = resolvePath(\n    __dirname,\n    '../../source/test/html/test.html'\n);\nconst testHtmlDestination = resolvePath(\n    __dirname,\n    '../index.html'\n);\nconst testCssSource = resolvePath(\n    __dirname,\n    '../../source/test/html/test.css'\n);\nconst testCssDestination = resolvePath(\n    __dirname,\n    '../test.css'\n);\n\ndescribe('Generate', function () {\n    before(async function () {\n        await Promise.all([\n            copyFile({\n                source: testHtmlSource,\n                destination: testHtmlDestination\n            }),\n            copyFile({\n                source: testCssSource,\n                destination: testCssDestination\n            })\n        ]);\n    });\n\n    it('Test Preview', async function() {\n        const folderContent = await getFolderContent(buildFolder)\n            .then(result => new Set(result));\n\n        expect(folderContent.has(basename(testHtmlDestination))).to.be.true;\n    })\n});"],"names":["buildFolder","resolvePath","__dirname","testHtmlSource","testHtmlDestination","testCssSource","testCssDestination","describe","before","Promise","all","copyFile","source","destination","it","folderContent","getFolderContent","then","result","Set","expect","has","basename","to","be","true"],"mappings":"4iBAKA,MAAMA,YAAcC,aAChBC,UACA,MAEEC,eAAiBF,aACnBC,UACA,oCAEEE,oBAAsBH,aACxBC,UACA,iBAEEG,cAAgBJ,aAClBC,UACA,mCAEEI,mBAAqBL,aACvBC,UACA,eAGJK,SAAS,WAAY,WACjBC,OAAO,iEACGC,QAAQC,KACVC,UACIC,OAAQT,eACRU,YAAaT,sBAEjBO,UACIC,OAAQP,cACRQ,YAAaP,2BAKzBQ,GAAG,eAAgB,2DACf,MAAMC,QAAsBC,iBAAiBhB,aACxCiB,KAAKC,GAAU,IAAIC,IAAID,IAE5BE,YAAOL,EAAcM,IAAIC,cAASlB,uBAAuBmB,GAAGC,GAAGC"}